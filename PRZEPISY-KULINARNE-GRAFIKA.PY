import json
import os
import tkinter as tk
from tkinter import messagebox, simpledialog

PLIK_PRZEPISY = "przepisy.json"

# Funkcje do obs≈Çugi pliku JSON
def wczytaj_przepisy():
    if os.path.exists(PLIK_PRZEPISY):
        with open(PLIK_PRZEPISY, "r", encoding="utf-8") as plik:
            return json.load(plik)
    return {}

def zapisz_przepisy(przepisy):
    with open(PLIK_PRZEPISY, "w", encoding="utf-8") as plik:
        json.dump(przepisy, plik, indent=4, ensure_ascii=False)

# Funkcja dodawania przepisu
def dodaj_przepis():
    nazwa = simpledialog.askstring("Dodaj przepis", "Podaj nazwƒô przepisu:")
    if not nazwa:
        return
    
    skladniki = simpledialog.askstring("Dodaj przepis", "Podaj sk≈Çadniki (oddzielone przecinkami):")
    instrukcje = simpledialog.askstring("Dodaj przepis", "Podaj instrukcje:")
    
    if not skladniki or not instrukcje:
        messagebox.showerror("B≈ÇƒÖd", "Musisz podaƒá sk≈Çadniki i instrukcje!")
        return
    
    przepisy = wczytaj_przepisy()
    przepisy[nazwa] = {"sk≈Çadniki": [s.strip() for s in skladniki.split(",")], "instrukcje": instrukcje}
    zapisz_przepisy(przepisy)
    messagebox.showinfo("Sukces", f"Przepis '{nazwa}' zosta≈Ç dodany!")
    wyswietl_przepisy()

# Funkcja wy≈õwietlania wszystkich przepis√≥w
def wyswietl_przepisy():
    przepisy = wczytaj_przepisy()
    lista_przepisow.delete(0, tk.END)  # Czy≈õcimy listƒô
    for nazwa in przepisy:
        lista_przepisow.insert(tk.END, nazwa)

# Funkcja wyszukiwania przepisu
def wyszukaj_przepis():
    nazwa = simpledialog.askstring("Wyszukaj przepis", "Podaj nazwƒô przepisu:")
    przepisy = wczytaj_przepisy()
    if nazwa in przepisy:
        przepis = przepisy[nazwa]
        messagebox.showinfo(f"Przepis: {nazwa}", f"Sk≈Çadniki: {', '.join(przepis['sk≈Çadniki'])}\n\nInstrukcje: {przepis['instrukcje']}")
    else:
        messagebox.showwarning("Nie znaleziono", f"Przepis '{nazwa}' nie istnieje.")

# Funkcja usuwania przepisu
def usun_przepis():
    nazwa = lista_przepisow.get(tk.ACTIVE)
    if not nazwa:
        messagebox.showwarning("B≈ÇƒÖd", "Nie wybrano przepisu!")
        return
    
    przepisy = wczytaj_przepisy()
    if nazwa in przepisy:
        del przepisy[nazwa]
        zapisz_przepisy(przepisy)
        messagebox.showinfo("Sukces", f"Przepis '{nazwa}' zosta≈Ç usuniƒôty.")
        wyswietl_przepisy()
    else:
        messagebox.showwarning("B≈ÇƒÖd", f"Przepis '{nazwa}' nie istnieje.")

# Tworzenie GUI
root = tk.Tk()
root.title("üìñ Przepisy Kulinarne")
root.geometry("400x500")

# Nag≈Ç√≥wek
naglowek = tk.Label(root, text="üìñ Przepisy Kulinarne", font=("Arial", 16, "bold"))
naglowek.pack(pady=10)

# Lista przepis√≥w
lista_przepisow = tk.Listbox(root, width=50, height=10)
lista_przepisow.pack(pady=10)
wyswietl_przepisy()

# Przyciski
btn_dodaj = tk.Button(root, text="‚ûï Dodaj Przepis", command=dodaj_przepis)
btn_dodaj.pack(pady=5)

btn_wyszukaj = tk.Button(root, text="üîç Wyszukaj Przepis", command=wyszukaj_przepis)
btn_wyszukaj.pack(pady=5)

btn_usun = tk.Button(root, text="üóë Usu≈Ñ Przepis", command=usun_przepis)
btn_usun.pack(pady=5)

btn_wyjdz = tk.Button(root, text="‚ùå Wyj≈õcie", command=root.quit)
btn_wyjdz.pack(pady=10)

# Uruchomienie aplikacji
root.mainloop()